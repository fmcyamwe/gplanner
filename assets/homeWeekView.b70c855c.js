import{F,a1 as U,r as v,N as L,G as g,H as G,I as y,O as p,J as m,R as N,S as P,U as q,a2 as W,a3 as I,Q as B,K as Q,M as b,a4 as V,L as T,a5 as J,_ as Y,a6 as j}from"./index.f3695b84.js";import{u as X,a as Z,Q as ee,b as K,c as te}from"./goalStorage.3d68be00.js";import{Q as z}from"./QBadge.9070efe5.js";import{i as se,Q as ae}from"./isMobile.be0b353d.js";import{Q as ie}from"./index.2e147bce.js";import{t as oe,F as le,a as _,p as x,b as O,N as C,O as $,P as H,S as ne}from"./QCalendarTask.5a2d55d1.js";import{a as re,b as de}from"./utiFunc.12687b08.js";import{N as D}from"./actions.582134db.js";const ue={name:"weekCalendar",components:{NavigationBar:U(()=>Y(()=>import("./NavigationBar.2de206b0.js"),["assets/NavigationBar.2de206b0.js","assets/NavigationBar.bf3d18d0.css","assets/index.f3695b84.js","assets/index.f80becc5.css"])),QCalendar:ie},data(){return X(),{store:Z(),calendar:v(null),currentDate:v(oe()),events:[],treeGoals:v([]),expanded:v([]),showTree:v(!1),moods:v({}),mobile:v(!1),todayEvts:v({}),mostEvts:v(5),intervalMins:v(15),intervals:v(48),earliestStart:v(0),testEarliest:v(null)}},beforeMount(){this.mobile=se(),this.loadEvts(),this.constructTree()},mounted(){console.log("mounted"),this.dayNotifData()},computed:{storedGoalsMap(){const s=new Map;let e=this.store.getSubGoals;return e?(e.forEach(t=>{s.set(t.id,t)}),s):(console.log("GoalsMap is empty or null",e),s)},label(){return this.showTree?"Hide Legend":"Show Legend"},allEvents(){return this.store.getAllDates},parentGoalsMap(){const s=new Map;let e=this.store.getMainGoals;return e?(e.forEach(t=>{s.set(t.id,t)}),s):(console.log("parentGoalsMap is empty or null",e),s)},eventsMap(){const s={};return this.events.forEach(e=>{if(s[e.date]||(s[e.date]=[]),s[e.date].push(e),e.days){console.log(`eventsMap multiple days? event for ${e.date}`,e.days);let t=le(e.date),n=e.days;do t=_(t,{day:1}),s[t.date]||(s[t.date]=[]),s[t.date].push(e);while(--n>0)}}),s}},methods:{reload(){this.loadEvts(!0)},loadEvts(s=!1){var i,a,u,h;let e=this.parentGoalsMap,t=this.storedGoalsMap,n=this.store.getAllDates;if(t&&e){if(n){s&&(this.events=[],this.moods={});for(let o in n){let l=n[o];o==this.currentDate&&(this.todayEvts=l);for(let d in l){let r=t.get(parseInt(d));if(r){let E=e.get(r.parentGoal),c=_(O(o),{minute:x(l[d].time)}),f=_(c,{minute:parseInt(l[d].duration)}),S="";l[d].notes!==void 0&&((i=l[d])==null?void 0:i.notes)!==""?S=[`${c.time} - ${f.time}`,`${(u=(a=l[d])==null?void 0:a.atScore)!=null?u:""} >> ${r.score}`,`${(h=l[d])==null?void 0:h.notes}`].join(`
\r`):S=`${c.time} - ${f.time}`,l[d].byMood!==void 0&&(this.moods[o]||(this.moods[o]=[]),this.moods[o].push(...l[d].byMood)),this.testEarliest||(console.log(`loadEvts::testEarliest>> ${r.id}: `+r.title,JSON.stringify(o),JSON.stringify(c.time)),this.testEarliest=c),this.events.push({id:r.id,title:r.title,details:S,time:l[d].time,duration:l[d].duration,date:o,bgcolor:E.bgcolor,sortTime:c})}}}}}else{console.log("ERROR--no parent or goals!!REVIEW**");return}},dayNotifData(){if(this.mobile){let s=this.storedGoalsMap;console.log("dayNotifData",JSON.stringify(this.todayEvts)),D.getSkippedNotifs({date:this.currentDate}).then(e=>{var n,i;let t=e.skipped;if(Array.isArray(t)&&t.length>0)if(Object.keys(this.todayEvts).length>0){console.log("WoooResults>> ",JSON.stringify(t));let a=[];for(let u of t)u in this.todayEvts?(delete this.todayEvts[u],a.push((i=(n=s.get(parseInt(u)))==null?void 0:n.title)!=null?i:""),console.log("dayNotifData::deleteSkipped>> "+u,JSON.stringify(a))):console.log("dayNotifData::Skipped NOT FOUND?!? "+u,JSON.stringify(a));this.store.saveDailySchedule(this.currentDate,this.todayEvts),a.forEach(u=>{this.$q.notify({color:"warning",position:"top",message:`'${u}' Was Skipped!`,caption:`Removed from ${this.currentDate} Schedule`,icon:"thumb_down",timeout:t.length>1?2e3:3e3,multiLine:!0})}),D.clearStoreKey({key:"skip"}).then(u=>{this.reload()})}else console.log("ERROR::Skipped::storage mismatch",t.length),D.clearStoreKey({key:"skip"}).then(a=>{console.log("Skip key cleared!!")})}).catch(e=>{console.log("dayNotifData::getSkippedNotifs>>ERROR",e)}),D.getNotes().then(e=>{var t,n;if("notes"in e){let i=e.notes;const a=[];if(Array.isArray(i)){let u=[];for(let h of i)if(h.id in this.todayEvts){let o=Object.assign({},{...this.todayEvts[h.id],notes:h.note});this.todayEvts[h.id]=o,u.push(`'${(n=(t=s.get(parseInt(h.id)))==null?void 0:t.title)!=null?n:""}'`),a.push(h.id)}else console.log("getNotes>>ERROR note Evts not found "+h.id,JSON.stringify(h),JSON.stringify(this.todayEvts));this.store.saveDailySchedule(this.currentDate,this.todayEvts),this.$q.notify({color:"positive",position:"top",message:`${u.join()} Evts had notes added!!`,icon:"thumb_up",timeout:5e3,multiLine:!0})}else console.log("getNotes>>ERROR not array",JSON.stringify(i),Array.isArray(i));D.clearStoreKey({key:"notey",ids:a}).then(u=>{this.reload()})}}),D.getStartEndTimes().then(e=>{var t,n;if("started"in e&&"ended"in e){let i=e.started,a=e.ended;if(!(Array.isArray(i)&&Array.isArray(a))){console.log("getStartEndTimes>>ERROR::not arrays?!?",i,a);return}if(Object.keys(this.todayEvts).length<1&&(i.length>0||a.length>0)){console.log("ERROR::getStartEndTimes >>storage mismatch--CLEARING KEYS!!"),D.clearStoreKey({key:"start",ids:[]}).then(h=>{console.log("dayNotifData::clearStoreKey>>Start",JSON.stringify(h))}).then(()=>{console.log("dayNotifData::clearStoreKey>>End"),D.clearStoreKey({key:"end",ids:[]})});return}if(i.length>0||a.length>0){let h=[],o=[],l=[];console.log("getStartEndTimes::",JSON.stringify(i),"ended>> "+JSON.stringify(a));for(let d in this.todayEvts){let r=i.find(f=>f.id==d),E=a.find(f=>f.id==d),c=this.todayEvts[d];if(r&&E){let f=C(new Date(r.startedAt)),S=C(new Date(E.endedAt)),k=_(O(this.currentDate),{minute:x(c.time)}),A=Math.floor($(k,f)/1e3/60),w=Math.ceil((E.endedAt-r.startedAt)/1e3/60);if(console.log(`getStartEndTimes>> ${r.id} was saved at ${k.time} for ${c.duration}`),console.log("Actually startedAt and endedAt: "+f.time+" > "+S.time,"startDiff of "+A," with actualDura: "+w),A>=3||w>c.duration){let R=f.time,M=Object.assign({},{...c,time:R,duration:w});console.log("getStartEndTimes::Setting Started>> "+d,JSON.stringify(M)),this.todayEvts[d]=M,l.push([`'${(n=(t=s.get(parseInt(r.id)))==null?void 0:t.title)!=null?n:""}' was modified!`,`Start time: ${R} with duration: ${w}`])}h.push(r.id),o.push(E.id)}else if(r){console.log("dayNotifData::getStartEndTimes::Evt only IN START?!? "+d,JSON.stringify(r));let f=C(new Date(r.startedAt)),S=_(O(this.currentDate),{minute:x(c.time)}),k=_(S,{minute:parseInt(c.duration)}),A=Math.floor($(S,f)/1e3/60),w=_(C(new Date),{minute:0}),R=Math.floor($(k,w)/1e3/60),M=c.duration*2+A;(M<R||c.notes)&&(console.log("getStartEndTimes::IN START ERASE "+d,f.time,"vs "+S.time,A,"till "+k.time,R,"> than "+M,c.notes),h.push(r.id))}else if(E){let f=_(O(this.currentDate),{minute:x(c.time)}),S=C(new Date(E.endedAt)),k=Math.floor($(f,S)/1e3/60);console.log("dayNotifData::getStartEndTimes::Evt only IN END?! "+d,"dura as "+c.duration,k,JSON.stringify(E),f.time,S.time),o.push(E.id)}}l.length>0&&this.store.saveDailySchedule(this.currentDate,this.todayEvts),l.forEach(d=>{var r,E;this.$q.notify({color:"warning",position:"top",message:(r=d[0])!=null?r:"",caption:(E=d[1])!=null?E:"",icon:"tag_faces",timeout:l.length>1?2e3:3e3,multiLine:!0})}),h.length>0&&D.clearStoreKey({key:"start",ids:h}),o.length>0&&D.clearStoreKey({key:"end",ids:o}),l.length>0?this.reload():console.log("getStartEndTimes::No reload needed")}}else console.log("dayNotifData::getStartEndTimes::ERROR? no Start or End in response",JSON.stringify(e))})}},constructTree(){this.treeGoals=this.store.fetchGoalsTree()},getEvents(s){let e=(n,i)=>{let a=$(n.sortTime,i.sortTime);if(a>0)return-1;if(a==0)return 0;if(a<0)return 1};const t=this.eventsMap[s]||[];if(t.length===1)t[0].side="full";else if(t.length===2){const n=_(O(t[0].date),{minute:x(t[0].time)}),i=_(n,{minute:t[0].duration}),a=_(O(t[1].date),{minute:x(t[1].time)}),u=_(a,{minute:t[1].duration});H(a,n,i,!0)||H(u,n,i,!0)?(t[0].side="left",t[1].side="right"):(t[0].side="full",t[1].side="full")}return t.length>this.mostEvts&&(console.log(`getEvents hiiigh ${s}`,t.length,this.mobile),this.mostEvts=this.mobile?t.length+5:t.length),t.sort(e),t},isEarlier(s){var n;let e=this.getTimeyNumber(s),t=this.getTimeyNumber(this.testEarliest);console.log(`isEarlier::testEarliest>> ${(n=s==null?void 0:s.time)!=null?n:"EMPTY"}: ${this.testEarliest.time}`,JSON.stringify(e),JSON.stringify(t))},getTimeyNumber(s){return s!==null?ne(s):!1},classyColor(s){return`row items-center ${s.isChildren?"text-":"text-white bg-"}${s.color} `},badgeClasses(s,e){return re(s,e)},badgeStyles(s,e,t=void 0,n=void 0){return de(s,e,t,n)},scrollToEvent(s){this.$refs.calendar.scrollToTime(s.time,350)},scrollToCurrent(){let s=C(new Date);console.log("scrollToCurrent",s.time,this.$refs.calendar?"yes":"no"),this.$refs.calendar.scrollToTime(s.time,500)},onToday(){this.$refs.calendar.moveToToday()},onPrev(){this.$refs.calendar.prev()},onNext(){this.$refs.calendar.next()},onClickHeadDay({scope:s,event:e}){var a,u;let t=s.timestamp.date,n=this.moods[t],i=(u=(a=this.eventsMap[t])==null?void 0:a.length)!=null?u:0;n?this.$q.notify({color:"positive",position:"top",message:`${i} Scheduled with Moods: ${n.join()}`,icon:"tag_faces",multiLine:!0,timeout:3e3}):this.$q.notify({color:"white",textColor:"black",position:"top",message:i>0?`${i} Scheduled without Any Mood!`:"Empty and NO mood!!",icon:i>0?"mood":"sentiment_neutral",iconColor:i>0?"positive":"red",multiLine:!0,timeout:3e3})},onChange(s){this.mostEvts=5}}},he={class:"q-px-md"},me={class:"row justify-center"},ce={class:"q-px-md",style:{display:"flex","max-width":"800px",width:"100%",height:"500px"}},ye={style:{display:"flex","justify-content":"center","flex-wrap":"wrap",padding:"2px"}},fe={class:"title q-calendar__ellipsis"},ge={class:"title q-calendar__ellipsis"},pe={class:"lineyy"},Ee={key:0,class:"q-pa-md"},ve={key:0,class:"q-pa-md bg-grey-12",style:{"max-width":"400px"}},Se={class:"q-mr-sm text-weight-bold",size:"28px"},_e={key:0},Ne={class:"text-weight-bold liney"},Te={key:1,class:"text-weight-light text-black liney"},De={key:1,class:"column justify-center items-center"};function be(s,e,t,n,i,a){const u=L("navigation-bar"),h=L("q-calendar");return g(),G(ee,{padding:""},{default:y(()=>[p("div",he,[m(u,{onToday:a.onToday,onPrev:a.onPrev,onNext:a.onNext},null,8,["onToday","onPrev","onNext"]),e[3]||(e[3]=p("i",{class:"row justify-center q-pa-sm"},"Click on Day header for that day's Moods ",-1)),p("div",me,[p("div",ce,[m(h,{ref:"calendar",modelValue:i.currentDate,"onUpdate:modelValue":e[0]||(e[0]=o=>i.currentDate=o),view:"week",dark:"",animated:"",hoverable:"",bordered:"","transition-prev":"slide-right","transition-next":"slide-left","no-active-date":"","interval-minutes":15,"interval-count":96,"interval-height":28,onChange:a.onChange,onClickHeadDay:a.onClickHeadDay},{"head-day-event":y(({scope:{timestamp:o}})=>[p("div",ye,[(g(!0),N(q,null,P(a.eventsMap[o.date],l=>(g(),N(q,{key:l.id},[l.time?(g(),G(z,{key:1,class:V(a.badgeClasses(l,"header")),style:j([a.badgeStyles(l,"header"),{margin:"1px",width:"10px","max-width":"10px",height:"10px","max-height":"10px",cursor:"pointer"}]),onClick:d=>a.scrollToEvent(l)},{default:y(()=>[m(K,null,{default:y(()=>[T(b(l.time+" - "+l.title),1)]),_:2},1024)]),_:2},1032,["class","style","onClick"])):(g(),G(z,{key:0,class:V(a.badgeClasses(l,"header")),style:j([a.badgeStyles(l,"header"),{width:"100%",cursor:"pointer",height:"12px","font-size":"10px",margin:"1px"}])},{default:y(()=>[p("div",fe,[T(b(l.title)+" ",1),m(K,null,{default:y(()=>[T(b(l.details),1)]),_:2},1024)])]),_:2},1032,["class","style"]))],64))),128))])]),"day-body":y(({scope:{timestamp:o,timeStartPos:l,timeDurationHeight:d}})=>[(g(!0),N(q,null,P(a.getEvents(o.date),r=>(g(),N(q,{key:r.id},[r.time!==void 0?(g(),N("div",{key:0,class:V(["my-event",a.badgeClasses(r,"body")]),style:j(a.badgeStyles(r,"body",l,d))},[p("span",ge,[T(b(r.title)+" ",1),m(K,null,{default:y(()=>[p("div",pe,b(r.details),1)]),_:2},1024)])],6)):Q("",!0)],64))),128))]),_:1},8,["modelValue","onChange","onClickHeadDay"])])])]),m(W,{modelValue:i.showTree,"onUpdate:modelValue":e[1]||(e[1]=o=>i.showTree=o),label:a.label,color:"teal",class:"q-pa-md"},null,8,["modelValue","label"]),m(te,null,{default:y(()=>[i.showTree?(g(),N("div",Ee,[i.treeGoals.length>0?(g(),N("div",ve,[e[4]||(e[4]=p("div",{class:"row justify-center"}," Goals & Goal Events ",-1)),m(I),e[5]||(e[5]=p("br",null,null,-1)),m(ae,{nodes:i.treeGoals,"node-key":"label",expanded:i.expanded,"onUpdate:expanded":e[2]||(e[2]=o=>i.expanded=o),"no-connectors":"",dense:"",accordion:""},{"default-header":y(o=>[p("div",{class:V(a.classyColor(o.node))},[o.node.isChildren?Q("",!0):(g(),G(B,{key:0,name:o.expanded?"expand_less":"expand_more",size:"28px",class:"q-mr-sm"},null,8,["name"])),p("div",Se,b(o.node.label),1),m(B,{name:o.node.icon},null,8,["name"])],2)]),"default-body":y(o=>[o.node.isChildren?(g(),N("div",_e,[p("span",Ne," >> "+b(o.node.details),1),o.node.moods.length>0?(g(),G(K,{key:0},{default:y(()=>[T(b("Moods::> "+o.node.moods.join(",")),1)]),_:2},1024)):Q("",!0)])):(g(),N("span",Te,b(o.node.details),1))]),_:1},8,["nodes","expanded"])])):(g(),N("div",De,[e[11]||(e[11]=p("br",null,null,-1)),m(J,null,{default:y(()=>e[6]||(e[6]=[T(" 1. Add some Goals first. A schedulable goal is one with a parent Goal--can have multiple related goals with the same parent. ")])),_:1}),m(I),m(J,null,{default:y(()=>e[7]||(e[7]=[T(" 2. Go to Schedule to see a daily schedule. Drag scheduled events to new timeslots or click in calendar to add an event. ")])),_:1}),m(I),m(J,null,{default:y(()=>e[8]||(e[8]=[T(" 3. Reload a saved daily schedule or defaults or choose minimal score events to schedule. Fix any scheduling conflicts. ")])),_:1}),m(I),m(J,null,{default:y(()=>e[9]||(e[9]=[T(" 4. Save the daily schedule (dont forget to update their score as needed!) ")])),_:1}),m(I),m(J,null,{default:y(()=>e[10]||(e[10]=[T(" 5. Check out the summary of all goals here! ")])),_:1})]))])):Q("",!0)]),_:1})]),_:1})}var Ge=F(ue,[["render",be],["__scopeId","data-v-2d93064e"]]);export{Ge as default};
